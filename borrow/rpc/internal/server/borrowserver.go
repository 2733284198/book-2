// Code generated by goctl. DO NOT EDIT!
// Source: borrow.proto

package server

import (
	"context"

	"book/borrow/rpc/internal/logic"
	"book/borrow/rpc/internal/svc"
	borrow "book/borrow/rpc/pb"
)

type BorrowServer struct {
	svcCtx *svc.ServiceContext
}

func NewBorrowServer(svcCtx *svc.ServiceContext) *BorrowServer {
	return &BorrowServer{
		svcCtx: svcCtx,
	}
}

// 借书
func (s *BorrowServer) Borrow(ctx context.Context, in *borrow.BorrowReq) (*borrow.BaseReply, error) {
	l := logic.NewBorrowLogic(ctx, s.svcCtx)
	return l.Borrow(in)
}

// 还书
func (s *BorrowServer) Return(ctx context.Context, in *borrow.ReturnReq) (*borrow.BaseReply, error) {
	l := logic.NewReturnLogic(ctx, s.svcCtx)
	return l.Return(in)
}
