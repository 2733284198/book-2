// Code generated by protoc-gen-go. DO NOT EDIT.
// source: library.proto

package library

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindBookReq struct {
	// 书籍名称
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindBookReq) Reset()         { *m = FindBookReq{} }
func (m *FindBookReq) String() string { return proto.CompactTextString(m) }
func (*FindBookReq) ProtoMessage()    {}
func (*FindBookReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8a1c5bd42931444, []int{0}
}

func (m *FindBookReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBookReq.Unmarshal(m, b)
}
func (m *FindBookReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBookReq.Marshal(b, m, deterministic)
}
func (m *FindBookReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBookReq.Merge(m, src)
}
func (m *FindBookReq) XXX_Size() int {
	return xxx_messageInfo_FindBookReq.Size(m)
}
func (m *FindBookReq) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBookReq.DiscardUnknown(m)
}

var xxx_messageInfo_FindBookReq proto.InternalMessageInfo

func (m *FindBookReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type FindBookReply struct {
	No                   string   `protobuf:"bytes,1,opt,name=no,proto3" json:"no,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Author               string   `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	PublishFate          string   `protobuf:"bytes,4,opt,name=publishFate,proto3" json:"publishFate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindBookReply) Reset()         { *m = FindBookReply{} }
func (m *FindBookReply) String() string { return proto.CompactTextString(m) }
func (*FindBookReply) ProtoMessage()    {}
func (*FindBookReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_f8a1c5bd42931444, []int{1}
}

func (m *FindBookReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindBookReply.Unmarshal(m, b)
}
func (m *FindBookReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindBookReply.Marshal(b, m, deterministic)
}
func (m *FindBookReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindBookReply.Merge(m, src)
}
func (m *FindBookReply) XXX_Size() int {
	return xxx_messageInfo_FindBookReply.Size(m)
}
func (m *FindBookReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FindBookReply.DiscardUnknown(m)
}

var xxx_messageInfo_FindBookReply proto.InternalMessageInfo

func (m *FindBookReply) GetNo() string {
	if m != nil {
		return m.No
	}
	return ""
}

func (m *FindBookReply) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FindBookReply) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *FindBookReply) GetPublishFate() string {
	if m != nil {
		return m.PublishFate
	}
	return ""
}

func init() {
	proto.RegisterType((*FindBookReq)(nil), "library.FindBookReq")
	proto.RegisterType((*FindBookReply)(nil), "library.FindBookReply")
}

func init() { proto.RegisterFile("library.proto", fileDescriptor_f8a1c5bd42931444) }

var fileDescriptor_f8a1c5bd42931444 = []byte{
	// 172 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0xc9, 0x4c, 0x2a,
	0x4a, 0x2c, 0xaa, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x14, 0xb9,
	0xb8, 0xdd, 0x32, 0xf3, 0x52, 0x9c, 0xf2, 0xf3, 0xb3, 0x83, 0x52, 0x0b, 0x85, 0x84, 0xb8, 0x58,
	0xf2, 0x12, 0x73, 0x53, 0x25, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xc0, 0x6c, 0xa5, 0x5c, 0x2e,
	0x5e, 0x84, 0x92, 0x82, 0x9c, 0x4a, 0x21, 0x3e, 0x2e, 0xa6, 0xbc, 0x7c, 0xa8, 0x12, 0xa6, 0xbc,
	0x7c, 0xb8, 0x26, 0x26, 0x84, 0x26, 0x21, 0x31, 0x2e, 0xb6, 0xc4, 0xd2, 0x92, 0x8c, 0xfc, 0x22,
	0x09, 0x66, 0xb0, 0x28, 0x94, 0x27, 0xa4, 0xc0, 0xc5, 0x5d, 0x50, 0x9a, 0x94, 0x93, 0x59, 0x9c,
	0xe1, 0x96, 0x58, 0x92, 0x2a, 0xc1, 0x02, 0x96, 0x44, 0x16, 0x32, 0xf2, 0xe4, 0x82, 0x39, 0x4e,
	0xc8, 0x8e, 0x8b, 0x0f, 0x66, 0xb3, 0x53, 0xa5, 0x1f, 0xc8, 0x58, 0x11, 0x3d, 0x98, 0x3f, 0x90,
	0x5c, 0x2d, 0x25, 0x86, 0x45, 0xb4, 0x20, 0xa7, 0x32, 0x89, 0x0d, 0xec, 0x59, 0x63, 0x40, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x2b, 0x34, 0x83, 0x1a, 0xfd, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LibraryClient is the client API for Library service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LibraryClient interface {
	// 通过书籍名称查找书籍
	FindBookByName(ctx context.Context, in *FindBookReq, opts ...grpc.CallOption) (*FindBookReply, error)
}

type libraryClient struct {
	cc *grpc.ClientConn
}

func NewLibraryClient(cc *grpc.ClientConn) LibraryClient {
	return &libraryClient{cc}
}

func (c *libraryClient) FindBookByName(ctx context.Context, in *FindBookReq, opts ...grpc.CallOption) (*FindBookReply, error) {
	out := new(FindBookReply)
	err := c.cc.Invoke(ctx, "/library.library/FindBookByName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LibraryServer is the server API for Library service.
type LibraryServer interface {
	// 通过书籍名称查找书籍
	FindBookByName(context.Context, *FindBookReq) (*FindBookReply, error)
}

// UnimplementedLibraryServer can be embedded to have forward compatible implementations.
type UnimplementedLibraryServer struct {
}

func (*UnimplementedLibraryServer) FindBookByName(ctx context.Context, req *FindBookReq) (*FindBookReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindBookByName not implemented")
}

func RegisterLibraryServer(s *grpc.Server, srv LibraryServer) {
	s.RegisterService(&_Library_serviceDesc, srv)
}

func _Library_FindBookByName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindBookReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LibraryServer).FindBookByName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/library.library/FindBookByName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LibraryServer).FindBookByName(ctx, req.(*FindBookReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Library_serviceDesc = grpc.ServiceDesc{
	ServiceName: "library.library",
	HandlerType: (*LibraryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "FindBookByName",
			Handler:    _Library_FindBookByName_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "library.proto",
}
